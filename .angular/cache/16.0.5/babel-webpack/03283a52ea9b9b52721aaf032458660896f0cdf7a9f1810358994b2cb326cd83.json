{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { Subject, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../service/token.service\";\nclass AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.usuario = new Subject();\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(Response => this.tokenService.saveToken(Response.access_token)));\n  }\n  getProfile() {\n    const token = this.tokenService.getToken(); // Obtener el token de acceso almacenado\n    return this.http.get(`${this.apiUrl}/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n  setUsuario(user) {\n    this.usuario.next(user);\n    console.log(this.usuario);\n  }\n  getUsuiaro() {\n    console.log(\"this.usuario\");\n    return this.usuario.asObservable();\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["environment","Subject","switchMap","tap","AuthService","constructor","http","tokenService","usuario","apiUrl","API_URL","login","email","password","post","pipe","Response","saveToken","access_token","getProfile","token","getToken","get","headers","Authorization","loginAndGet","setUsuario","user","next","console","log","getUsuiaro","asObservable","i0","ɵɵinject","i1","HttpClient","i2","TokenService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\Desktop\\programacion\\platzy\\Angular\\my-store\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport{Auth} from '../Models/auth.models';\nimport {CreateUserDTO, User} from '../Models/user.models';\nimport{TokenService} from '../service/token.service';\nimport { Subject, switchMap, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private usuario: Subject<string> = new Subject<string>();\n  private apiUrl=`${environment.API_URL}/api/auth`;\n  constructor(\n    private http:HttpClient,\n    private tokenService:TokenService\n  ) { }\n\n  login( email:string, password:string ){\n    return this.http.post<Auth>(`${this.apiUrl}/login`,{email,password})\n    .pipe(\n      tap(Response => this.tokenService.saveToken(Response.access_token))\n    );\n  }\n\n  getProfile() {\n    const token = this.tokenService.getToken(); // Obtener el token de acceso almacenado\n    return this.http.get<User>(`${this.apiUrl}/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n    \n  loginAndGet(email:string, password:string){\n    return this.login(email,password)\n    .pipe(\n      switchMap(() => this.getProfile()),\n    )\n  }\n\n  setUsuario(user:string){\n    this.usuario.next(user)\n    console.log(this.usuario)\n  };\n  getUsuiaro(){\n    console.log(\"this.usuario\");\n    return this.usuario.asObservable();\n\n  }\n\n}\n"],"mappings":"AAEA,SAAQA,WAAW,QAAO,gCAAgC;AAI1D,SAASC,OAAO,EAAEC,SAAS,EAAEC,GAAG,QAAQ,MAAM;;;;AAC9C,MAGaC,WAAW;EAGtBC,YACUC,IAAe,EACfC,YAAyB;IADzB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAJd,KAAAC,OAAO,GAAoB,IAAIP,OAAO,EAAU;IAChD,KAAAQ,MAAM,GAAC,GAAGT,WAAW,CAACU,OAAO,WAAW;EAI5C;EAEJC,KAAKA,CAAEC,KAAY,EAAEC,QAAe;IAClC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAC;MAACG,KAAK;MAACC;IAAQ,CAAC,CAAC,CACnEE,IAAI,CACHZ,GAAG,CAACa,QAAQ,IAAI,IAAI,CAACT,YAAY,CAACU,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACpE;EACH;EAEAC,UAAUA,CAAA;IACR,MAAMC,KAAK,GAAG,IAAI,CAACb,YAAY,CAACc,QAAQ,EAAE,CAAC,CAAC;IAC5C,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAO,GAAG,IAAI,CAACb,MAAM,UAAU,EAAE;MACnDc,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;;KAEjC,CAAC;EACJ;EAGAK,WAAWA,CAACb,KAAY,EAAEC,QAAe;IACvC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,CAChCE,IAAI,CACHb,SAAS,CAAC,MAAM,IAAI,CAACiB,UAAU,EAAE,CAAC,CACnC;EACH;EAEAO,UAAUA,CAACC,IAAW;IACpB,IAAI,CAACnB,OAAO,CAACoB,IAAI,CAACD,IAAI,CAAC;IACvBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,OAAO,CAAC;EAC3B;EACAuB,UAAUA,CAAA;IACRF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAO,IAAI,CAACtB,OAAO,CAACwB,YAAY,EAAE;EAEpC;;AAxCW5B,WAAW,C;mBAAXA,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAXlC,WAAW,C;SAAXA,WAAW;EAAAmC,OAAA,EAAXnC,WAAW,CAAAoC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPrC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}