{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../service/token.service\";\nclass AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(Response => this.tokenService.saveToken(Response.access_token)));\n  }\n  getProfile(token) {\n    return this.http.get(`${this.apiUrl}/profile`, {\n      // // headers:{\n      // //   Authorization:`Bearer ${token}`\n      // }\n    });\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(rta => this.getProfile(rta.access_token)));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["environment","switchMap","tap","AuthService","constructor","http","tokenService","apiUrl","API_URL","login","email","password","post","pipe","Response","saveToken","access_token","getProfile","token","get","loginAndGet","rta","i0","ɵɵinject","i1","HttpClient","i2","TokenService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\Desktop\\programacion\\platzy\\Angular\\my-store\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport{Auth} from '../Models/auth.models'\nimport{User} from '../Models/user.models'\nimport{TokenService} from '../service/token.service'\nimport { switchMap, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl=`${environment.API_URL}/api/auth`;\n  constructor(\n    private http:HttpClient,\n    private tokenService:TokenService\n  ) { }\n\n  login( email:string, password:string ){\n    return this.http.post<Auth>(`${this.apiUrl}/login`,{email,password})\n    .pipe(\n      tap(Response => this.tokenService.saveToken(Response.access_token))\n    );\n  }\n\n  getProfile(token:string){\n    return this.http.get<User>(`${this.apiUrl}/profile`,{\n      // // headers:{\n      // //   Authorization:`Bearer ${token}`\n      // }\n    });\n  }\n\n   \n  loginAndGet(email:string, password:string){\n    return this.login(email,password)\n    .pipe(\n      switchMap(rta => this.getProfile(rta.access_token))\n    )\n  }\n\n}\n"],"mappings":"AAEA,SAAQA,WAAW,QAAO,gCAAgC;AAI1D,SAASC,SAAS,EAAEC,GAAG,QAAQ,MAAM;;;;AACrC,MAGaC,WAAW;EAGtBC,YACUC,IAAe,EACfC,YAAyB;IADzB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAHd,KAAAC,MAAM,GAAC,GAAGP,WAAW,CAACQ,OAAO,WAAW;EAI5C;EAEJC,KAAKA,CAAEC,KAAY,EAAEC,QAAe;IAClC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAC;MAACG,KAAK;MAACC;IAAQ,CAAC,CAAC,CACnEE,IAAI,CACHX,GAAG,CAACY,QAAQ,IAAI,IAAI,CAACR,YAAY,CAACS,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACpE;EACH;EAEAC,UAAUA,CAACC,KAAY;IACrB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACZ,MAAM,UAAU,EAAC;MAClD;MACA;MACA;IAAA,CACD,CAAC;EACJ;EAGAa,WAAWA,CAACV,KAAY,EAAEC,QAAe;IACvC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,CAChCE,IAAI,CACHZ,SAAS,CAACoB,GAAG,IAAI,IAAI,CAACJ,UAAU,CAACI,GAAG,CAACL,YAAY,CAAC,CAAC,CACpD;EACH;;AA7BWb,WAAW,C;mBAAXA,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAXxB,WAAW,C;SAAXA,WAAW;EAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}