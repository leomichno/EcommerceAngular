{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../service/token.service\";\nclass AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe();\n  }\n  profile(token) {\n    return this.http.get(`${this.apiUrl}/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["environment","AuthService","constructor","http","tokenService","apiUrl","API_URL","login","email","password","post","pipe","profile","token","get","headers","Authorization","i0","ɵɵinject","i1","HttpClient","i2","TokenService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\Desktop\\programacion\\platzy\\Angular\\my-store\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport{Auth} from '../Models/auth.models'\nimport{User} from '../Models/user.models'\nimport{TokenService} from '../service/token.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl=`${environment.API_URL}/api/auth`;\n  constructor(\n    private http:HttpClient,\n    private tokenService:TokenService\n  ) { }\n\n  login( email:string, password:string ){\n    return this.http.post<Auth>(`${this.apiUrl}/login`,{email,password})\n    .pipe(\n\n    );\n  }\n\n  profile(token:string){\n    return this.http.get<User>(`${this.apiUrl}/profile`,{\n      headers:{\n        Authorization:`Bearer ${token}`\n      }\n    });\n  }\n\n}\n"],"mappings":"AAEA,SAAQA,WAAW,QAAO,gCAAgC;;;;AAI1D,MAGaC,WAAW;EAGtBC,YACUC,IAAe,EACfC,YAAyB;IADzB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAHd,KAAAC,MAAM,GAAC,GAAGL,WAAW,CAACM,OAAO,WAAW;EAI5C;EAEJC,KAAKA,CAAEC,KAAY,EAAEC,QAAe;IAClC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAC;MAACG,KAAK;MAACC;IAAQ,CAAC,CAAC,CACnEE,IAAI,EAEJ;EACH;EAEAC,OAAOA,CAACC,KAAY;IAClB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,UAAU,EAAC;MAClDU,OAAO,EAAC;QACNC,aAAa,EAAC,UAAUH,KAAK;;KAEhC,CAAC;EACJ;;AArBWZ,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}