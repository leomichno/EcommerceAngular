{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://young-sands-07814.herokuapp.com/api/products';\n  }\n  // PARA HACER UN LLAMADO A UNA API DEBEMOS HABILITAR EN APP.MODULE\n  // ponemos return para que luego con un suscrib nuestro componente tenga la informacion\n  getAllProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(dto) {\n    return this.http.post(this.apiUrl, dto);\n  }\n  update(id, dto) {\n    return this.http.put(`${this.apiUrl}/${id}`, dto);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductsService };","map":{"version":3,"names":["ProductsService","constructor","http","apiUrl","getAllProducts","get","getProduct","id","create","dto","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\desktop\\programacion\\platzy\\angular\\my-store\\src\\app\\service\\products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { CreateProductDTO, Product } from '../Reglaprod/prod.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private apiUrl='https://young-sands-07814.herokuapp.com/api/products';\n  constructor(\n    private http:HttpClient\n  ) { }\n  // PARA HACER UN LLAMADO A UNA API DEBEMOS HABILITAR EN APP.MODULE\n  // ponemos return para que luego con un suscrib nuestro componente tenga la informacion\n  getAllProducts(){\n    return this.http.get<Product[]>(this.apiUrl)\n  }\n  getProduct(id:string){\n    return this.http.get<Product>(`${this.apiUrl}/${id}`)\n  }\n  create(dto:CreateProductDTO){\n    return this.http.post<Product>(this.apiUrl,dto);\n  }\n  update(id:string, dto:any){\n    return this.http.put<Product>(`${this.apiUrl}/${id}`,dto)\n  }\n  delete(id:string){\n    return this.http.delete<boolean>(`${this.apiUrl}/${id}`)\n  }\n}\n// vamos hacer un request (peticion) para que nos devuelva todos los productos\n\n"],"mappings":";;AAIA,MAGaA,eAAe;EAG1BC,YACUC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFN,KAAAC,MAAM,GAAC,sDAAsD;EAGjE;EACJ;EACA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EACAG,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EACAC,MAAMA,CAACC,GAAoB;IACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAACM,GAAG,CAAC;EACjD;EACAE,MAAMA,CAACJ,EAAS,EAAEE,GAAO;IACvB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAACE,GAAG,CAAC;EAC3D;EACAI,MAAMA,CAACN,EAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAU,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,CAAC;EAC1D;;AAtBWP,eAAe,C;mBAAfA,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfjB,eAAe,C;SAAfA,eAAe;EAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPpB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}