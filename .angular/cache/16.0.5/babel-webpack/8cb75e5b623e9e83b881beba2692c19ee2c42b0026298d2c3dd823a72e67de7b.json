{"ast":null,"code":"import { HttpStatusCode } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.API_URL}/api/products`;\n  }\n  // PARA HACER UN LLAMADO A UNA API DEBEMOS HABILITAR EN APP.MODULE\n  // ponemos return para que luego con un suscrib nuestro componente tenga la informacion\n  getAllProducts() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      // error de conflicto es el 409\n      if (error.status === 404 /* HttpStatusCode.NotFound */) {\n        return throwError('Algo esta fallando en el server');\n      }\n      return throwError('Ups algo salio mal');\n    }));\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(dto) {\n    return this.http.post(this.apiUrl, dto);\n  }\n  update(id, dto) {\n    return this.http.put(`${this.apiUrl}/${id}`, dto);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  getProductsByPage(limit, offset) {\n    return this.http.get(`${this.apiUrl}`, {\n      params: {\n        limit,\n        offset\n      }\n    });\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductsService };","map":{"version":3,"names":["HttpStatusCode","catchError","throwError","environment","ProductsService","constructor","http","apiUrl","API_URL","getAllProducts","get","pipe","error","status","getProduct","id","create","dto","post","update","put","delete","getProductsByPage","limit","offset","params","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\Desktop\\programacion\\platzy\\Angular\\my-store\\src\\app\\service\\products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpStatusCode} from '@angular/common/http';\nimport { CreateProductDTO, Product } from '../Reglaprod/prod.component';\nimport {retry,catchError} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\n\nimport {environment} from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private apiUrl=`${environment.API_URL}/api/products`;\n  constructor(\n    private http:HttpClient\n  ) { }\n  // PARA HACER UN LLAMADO A UNA API DEBEMOS HABILITAR EN APP.MODULE\n  // ponemos return para que luego con un suscrib nuestro componente tenga la informacion\n  getAllProducts(){\n    return this.http.get<Product[]>(this.apiUrl)\n    .pipe(\n      catchError((error: HttpErrorResponse)=>{\n        // error de conflicto es el 409\n        if (error.status === HttpStatusCode.NotFound){\n          return throwError('Algo esta fallando en el server');\n        }\n        return throwError('Ups algo salio mal')\n      })\n    )\n  }\n  getProduct(id:string){\n    return this.http.get<Product>(`${this.apiUrl}/${id}`)\n  }\n  create(dto:CreateProductDTO){\n    return this.http.post<Product>(this.apiUrl,dto);\n  }\n  update(id:string, dto:any){\n    return this.http.put<Product>(`${this.apiUrl}/${id}`,dto)\n  }\n  delete(id:string){\n    return this.http.delete<boolean>(`${this.apiUrl}/${id}`)\n  }\n  getProductsByPage(limit:number,offset:number){\n     return this.http.get<Product[]>(`${this.apiUrl}`,{params:{limit,offset}})\n  }\n\n}\n// vamos hacer un request (peticion) para que nos devuelva todos los productos\n\n"],"mappings":"AACA,SAAuCA,cAAc,QAAO,sBAAsB;AAElF,SAAcC,UAAU,QAAO,gBAAgB;AAC/C,SAAQC,UAAU,QAAO,MAAM;AAE/B,SAAQC,WAAW,QAAO,gCAAgC;;;AAE1D,MAGaC,eAAe;EAG1BC,YACUC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFN,KAAAC,MAAM,GAAC,GAAGJ,WAAW,CAACK,OAAO,eAAe;EAGhD;EACJ;EACA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,MAAM,CAAC,CAC3CI,IAAI,CACHV,UAAU,CAAEW,KAAwB,IAAG;MACrC;MACA,IAAIA,KAAK,CAACC,MAAM,wCAA6B;QAC3C,OAAOX,UAAU,CAAC,iCAAiC,CAAC;;MAEtD,OAAOA,UAAU,CAAC,oBAAoB,CAAC;IACzC,CAAC,CAAC,CACH;EACH;EACAY,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACvD;EACAC,MAAMA,CAACC,GAAoB;IACzB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAU,IAAI,CAACX,MAAM,EAACU,GAAG,CAAC;EACjD;EACAE,MAAMA,CAACJ,EAAS,EAAEE,GAAO;IACvB,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAU,GAAG,IAAI,CAACb,MAAM,IAAIQ,EAAE,EAAE,EAACE,GAAG,CAAC;EAC3D;EACAI,MAAMA,CAACN,EAAS;IACd,OAAO,IAAI,CAACT,IAAI,CAACe,MAAM,CAAU,GAAG,IAAI,CAACd,MAAM,IAAIQ,EAAE,EAAE,CAAC;EAC1D;EACAO,iBAAiBA,CAACC,KAAY,EAACC,MAAa;IACzC,OAAO,IAAI,CAAClB,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,MAAM,EAAE,EAAC;MAACkB,MAAM,EAAC;QAACF,KAAK;QAACC;MAAM;IAAC,CAAC,CAAC;EAC5E;;AAlCWpB,eAAe,C;mBAAfA,eAAe,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfzB,eAAe,C;SAAfA,eAAe;EAAA0B,OAAA,EAAf1B,eAAe,CAAA2B,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEP5B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}