{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.API_URL}/api/user`;\n  }\n  login({\n    email,\n    password\n  }) {\n    this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).subscribe(auth => {\n      // Manejar la respuesta exitosa\n      console.log(auth);\n    }, error => {\n      // Manejar el error\n      console.error(error);\n    });\n  }\n  profile() {\n    this.http.get(`${this.apiUrl}/profile`).subscribe(profile => {\n      // Manejar la respuesta exitosa\n      console.log(profile);\n    }, error => {\n      // Manejar el error\n      console.error(error);\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["environment","AuthService","constructor","http","apiUrl","API_URL","login","email","password","post","subscribe","auth","console","log","error","profile","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\venta\\Desktop\\programacion\\platzy\\Angular\\my-store\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport{Auth} from '../Models/auth.models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl = `${environment.API_URL}/api/user`;\n\n  constructor(private http: HttpClient) {}\n\n  login({ email, password }: { email: string; password: string; }): void {\n    this.http.post<Auth>(`${this.apiUrl}/login`, { email, password }).subscribe(\n      (auth: Auth) => {\n        // Manejar la respuesta exitosa\n        console.log(auth);\n      },\n      (error) => {\n        // Manejar el error\n        console.error(error);\n      }\n    );\n  }\n\n  profile(): void {\n    this.http.get(`${this.apiUrl}/profile`).subscribe(\n      (profile: any) => {\n        // Manejar la respuesta exitosa\n        console.log(profile);\n      },\n      (error) => {\n        // Manejar el error\n        console.error(error);\n      }\n    );\n  }\n}\n"],"mappings":"AAEA,SAAQA,WAAW,QAAO,gCAAgC;;;AAG1D,MAGaC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,OAAO,WAAW;EAEX;EAEvCC,KAAKA,CAAC;IAAEC,KAAK;IAAEC;EAAQ,CAAwC;IAC7D,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE;MAAEG,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAACE,SAAS,CACxEC,IAAU,IAAI;MACb;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,EACAG,KAAK,IAAI;MACR;MACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAC,OAAOA,CAAA;IACL,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,UAAU,CAAC,CAACM,SAAS,CAC9CK,OAAY,IAAI;MACf;MACAH,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;IACtB,CAAC,EACAD,KAAK,IAAI;MACR;MACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AA9BWb,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}